/* 
 * Copyright 2014 SciFY.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.scify.icstudy.main;

import java.awt.Color;
import org.bytedeco.javacv.FrameGrabber;
import org.scify.icstudy.DesktopSetup;
import org.scify.icstudy.WebcamSetup;

/**
 *
 * @author peustr
 */
public class Menu extends javax.swing.JFrame {

    private Thread instanceRunning;

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlButtonGroup = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        sourceLabel = new javax.swing.JLabel();
        webcamRadio = new javax.swing.JRadioButton();
        remoteRadio = new javax.swing.JRadioButton();
        runButton = new javax.swing.JToggleButton();
        ipLabel = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        extLabel = new javax.swing.JLabel();
        extField = new javax.swing.JTextField();
        fileField = new javax.swing.JTextField();
        ipField = new javax.swing.JTextField();
        ipExampleLabel = new javax.swing.JLabel();
        fileExampleLabel = new javax.swing.JLabel();
        extExampleLabel = new javax.swing.JLabel();

        controlButtonGroup.add(webcamRadio);
        controlButtonGroup.add(remoteRadio);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SciFY: ICStudy");

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        sourceLabel.setText("Please choose the data source");

        webcamRadio.setSelected(true);
        webcamRadio.setText("Webcam");

        remoteRadio.setText("Remote desktop");
        remoteRadio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                remoteRadioStateChanged(evt);
            }
        });

        runButton.setText("Run Configuration");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        ipLabel.setText("IP");

        fileLabel.setText("File");

        extLabel.setText("Extension");

        extField.setEditable(false);
        extField.setBackground(java.awt.Color.lightGray);
        extField.setText("ogg");

        fileField.setEditable(false);
        fileField.setBackground(java.awt.Color.lightGray);
        fileField.setText("desktop");

        ipField.setEditable(false);
        ipField.setBackground(java.awt.Color.lightGray);
        ipField.setText("192.168.1.99:5055");

        ipExampleLabel.setText("(i.e 192.168.0.15:8080)");

        fileExampleLabel.setText("(i.e foo for a file named foo.mp4)");

        extExampleLabel.setText("(i.e mp4)");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remoteRadio)
                    .addComponent(webcamRadio)
                    .addComponent(sourceLabel)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(extLabel)
                            .addComponent(fileLabel)
                            .addComponent(ipLabel))
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ipExampleLabel))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fileField, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(extField))
                                .addGap(18, 18, 18)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(extExampleLabel)
                                    .addComponent(fileExampleLabel)))))
                    .addComponent(runButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sourceLabel)
                .addGap(18, 18, 18)
                .addComponent(webcamRadio)
                .addGap(18, 18, 18)
                .addComponent(remoteRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipLabel)
                    .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ipExampleLabel))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLabel)
                    .addComponent(fileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileExampleLabel))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extLabel)
                    .addComponent(extField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(extExampleLabel))
                .addGap(18, 18, 18)
                .addComponent(runButton)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void remoteRadioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_remoteRadioStateChanged
        if (remoteRadio.isSelected()) {
            ipField.setEditable(true);
            fileField.setEditable(true);
            extField.setEditable(true);
            ipField.setBackground(Color.white);
            fileField.setBackground(Color.white);
            extField.setBackground(Color.white);
        } else {
            ipField.setEditable(false);
            fileField.setEditable(false);
            extField.setEditable(false);
            ipField.setBackground(Color.lightGray);
            fileField.setBackground(Color.lightGray);
            extField.setBackground(Color.lightGray);
        }
    }//GEN-LAST:event_remoteRadioStateChanged

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        if (instanceRunning != null && instanceRunning.isAlive()) {
            System.err.println("Already running one instance!");
        } else {
            if (remoteRadio.isSelected()) {
                instanceRunning = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        String[] args = {ipField.getText(), fileField.getText(), extField.getText()};
                        try {
                            DesktopSetup.main(args);
                        } catch (FrameGrabber.Exception ex) {
                            ex.printStackTrace(System.err);
                        }
                    }
                });
                instanceRunning.start();
            } else {
                instanceRunning = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        String[] args = {};
                        try {
                            WebcamSetup.main(args);
                        } catch (FrameGrabber.Exception ex) {
                            ex.printStackTrace(System.err);
                        }
                    }
                });
                instanceRunning.start();
            }
        }
        runButton.setSelected(false);
    }//GEN-LAST:event_runButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup controlButtonGroup;
    private javax.swing.JLabel extExampleLabel;
    private javax.swing.JTextField extField;
    private javax.swing.JLabel extLabel;
    private javax.swing.JLabel fileExampleLabel;
    private javax.swing.JTextField fileField;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JLabel ipExampleLabel;
    private javax.swing.JTextField ipField;
    private javax.swing.JLabel ipLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton remoteRadio;
    private javax.swing.JToggleButton runButton;
    private javax.swing.JLabel sourceLabel;
    private javax.swing.JRadioButton webcamRadio;
    // End of variables declaration//GEN-END:variables
}
